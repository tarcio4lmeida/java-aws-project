plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'com.palantir.docker' version '0.35.0'
}


group = 'talima94'
version = '1.2.8'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.2.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// Logging dependencies
	implementation 'ch.qos.logback:logback-classic:1.4.7'
	implementation 'ch.qos.logback.contrib:logback-json-classic:0.1.5'
	implementation 'ch.qos.logback.contrib:logback-jackson:0.1.5'
	implementation 'com.amazonaws:aws-java-sdk-sns'
	implementation 'com.amazonaws:aws-java-sdk-sqs'

	//sns
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-sns', version: '1.12.629'
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-sqs', version: '1.12.629'
	//lombok
	compileOnly 'org.projectlombok:lombok:1.18.26'
	annotationProcessor 'org.projectlombok:lombok:1.18.26'


}

tasks.register('unpack', Copy) {
	dependsOn bootJar
	from(zipTree(tasks.bootJar.outputs.files.singleFile))
	into("build/dependency")
}


//Já está preparado para gerar imagem no formato linux/amd64, inclusive em computadores com processadores ARM, como os novos Macbook.
//A variável project.name deve ser configurada no arquivo settings.gradle
docker {
	name "${project.group}/${project.name}"
	buildx true
	platform 'linux/amd64'
	copySpec.from(tasks.unpack.outputs).into('dependency')
	buildArgs(['DEPENDENCY' : "dependency"])
}

tasks.named('test') {
	useJUnitPlatform()
}